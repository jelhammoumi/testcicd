# This workflow deploy the EP repository to AWS instances

name: EP CI/CD Azure test

on:
  push:
    branches: [ master ]

  workflow_dispatch:

env:
  RELEASE_IDENTIFIER: electroplanet-release-${{github.run_id}}.tar.gz
  APP_BUILD_IDENTIFIER: electroplanet-build-${{github.run_id}}.tar.gz
  PROJECT_RELEASE_DIR:
  
jobs:
  checkout-release-builder:
    runs-on: vm-epecom-admin
    environment: preprod
    env:
      RELEASE_ENV: ${{ secrets.RELEASE_ENV }}
      PROJECT_RELEASE_DIR: ${{ secrets.PROJECT_RELEASE_DIR }}
    steps:
      - name: Checkout release from github repository
        uses: actions/checkout@v2
        
      - name: Performing magento configuration
        run: |
          mv app/etc/env-$RELEASE_ENV.php app/etc/env.php
          rm -f app/etc/env-*.php
          sed -i "s/{CONFIG_DB_HOST}/${{ secrets.CONFIG_DB_HOST }}/g" app/etc/env.php
          sed -i "s/{CONFIG_DB_NAME}/${{ secrets.CONFIG_DB_NAME }}/g" app/etc/env.php
          sed -i "s/{CONFIG_DB_USERNAME}/${{ secrets.CONFIG_DB_USERNAME }}/g" app/etc/env.php
          sed -i "s/{CONFIG_DB_PASSWORD}/${{ secrets.CONFIG_DB_PASSWORD }}/g" app/etc/env.php
          sed -i "s/{CONFIG_MAGENTO_CRYPT_KEY}/${{ secrets.CONFIG_MAGENTO_CRYPT_KEY }}/g" app/etc/env.php
          sed -i "s/{CONFIG_REDIS_CONF_CACHE_SERVER}/${{ secrets.CONFIG_REDIS_CONF_CACHE_SERVER }}/g" app/etc/env.php
          sed -i "s/{CONFIG_REDIS_CONF_CACHE_PORT}/${{ secrets.CONFIG_REDIS_CONF_CACHE_PORT }}/g" app/etc/env.php
          sed -i "s/{CONFIG_REDIS_CONF_CACHE_PASSWORD}/${{ secrets.CONFIG_REDIS_CONF_CACHE_PASSWORD }}/g" app/etc/env.php
          sed -i "s/{CONFIG_REDIS_FPC_CACHE_SERVER}/${{ secrets.CONFIG_REDIS_FPC_CACHE_SERVER }}/g" app/etc/env.php
          sed -i "s/{CONFIG_REDIS_FPC_CACHE_PORT}/${{ secrets.CONFIG_REDIS_FPC_CACHE_PORT }}/g" app/etc/env.php
          sed -i "s/{CONFIG_REDIS_FPC_CACHE_PASSWORD}/${{ secrets.CONFIG_REDIS_FPC_CACHE_PASSWORD }}/g" app/etc/env.php
          sed -i "s/{CONFIG_REDIS_SESSION_CACHE_SERVER}/${{ secrets.CONFIG_REDIS_SESSION_CACHE_SERVER }}/g" app/etc/env.php
          sed -i "s/{CONFIG_REDIS_SESSION_CACHE_PORT}/${{ secrets.CONFIG_REDIS_SESSION_CACHE_PORT }}/g" app/etc/env.php
          sed -i "s/{CONFIG_REDIS_SESSION_CACHE_PASSWORD}/${{ secrets.CONFIG_REDIS_SESSION_CACHE_PASSWORD }}/g" app/etc/env.php
          cp specifics/patchs/* . -R
          rm specifics -R
          touch $RELEASE_IDENTIFIER
          tar -czf $RELEASE_IDENTIFIER --exclude=.git --exclude=.github --exclude=.idea --exclude=$RELEASE_IDENTIFIER .
          (if [ -d "${PROJECT_RELEASE_DIR}" ]; then rm -fr $PROJECT_RELEASE_DIR; fi);
          (if [ ! -d "${PROJECT_RELEASE_DIR}" ]; then mkdir $PROJECT_RELEASE_DIR; fi);
          mv $RELEASE_IDENTIFIER $PROJECT_RELEASE_DIR

      - name: Download magento code base from S3
        run: |
          aws s3 cp ${{ secrets.S3_MAGENTO_CODE_BASE_243_FILEPATH }} $PROJECT_RELEASE_DIR/magento-code-base.tar
            
      - name: Building the application
        run: |
          cd $PROJECT_RELEASE_DIR
          tar -xf magento-code-base.tar
          rm magento-code-base.tar
          tar -xf $RELEASE_IDENTIFIER
          rm $RELEASE_IDENTIFIER
          touch $APP_BUILD_IDENTIFIER
          tar -czf $APP_BUILD_IDENTIFIER --exclude=$APP_BUILD_IDENTIFIER .
          
      - name: Store build as artifact
        uses: actions/upload-artifact@v3
        with:
          name: ${{ env.APP_BUILD_IDENTIFIER }}
          path: ${{ env.PROJECT_RELEASE_DIR }}/${{ env.APP_BUILD_IDENTIFIER }}
          retention-days: 1
          
  build-deploy:
    needs: checkout-release-builder
    runs-on: self-hosted
    environment: preprod
    env:
      PROJECT_RELEASE_DIR: ${{ secrets.PROJECT_RELEASE_DIR }}
      
    steps:
      - name: Download the build artifact
        uses: actions/download-artifact@v3
        with:
          name: ${{ env.APP_BUILD_IDENTIFIER }}
          
      - name: Deploy the app build
        run: |
          mv $APP_BUILD_IDENTIFIER $PROJECT_RELEASE_DIR/
          cd $PROJECT_RELEASE_DIR
          tar -h -xf $APP_BUILD_IDENTIFIER
